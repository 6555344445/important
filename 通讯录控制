#include<iostream>
#include<string>
const int Max = 1000;
using namespace std;
void Showmenu() {
	cout << "**********************" << endl;
	cout << "*****1.添加联系人*****" << endl;
	cout << "*****2.显示联系人*****" << endl;
	cout << "*****3.删除联系人*****" << endl;
	cout << "*****4.查找联系人*****" << endl;
	cout << "*****5.修改联系人*****" << endl;
	cout << "*****6.清空联系人*****" << endl;
	cout << "*****0.退出通讯录*****" << endl;
	cout << "**********************" << endl;
}
struct Person {
	string Name;
	int Sex;
	int Age;
	string Phone;
	string Addr;
};
struct Addressbooks {
	struct Person arr[Max];
	int Size;
};
void Addperson(Addressbooks* abs) {
	if (abs->Size == Max) {
		cout << "通讯录已满" << endl;
		return;
	}
	else {
		//姓名
		string name;
		cout << "请输入名字" << endl;
		cin >> name;
		abs->arr[abs->Size].Name = name;
		//性别
		cout << "请输入性别" << endl;
		cout << "1---男" << endl;
		cout << "2---女" << endl;
		int sex = 0;
		while (true) {
			cin >> sex;
			if (sex == 1 || sex == 2) {
				abs->arr[abs->Size].Sex = sex;
				break;
			}

		}
		cout << "请输入年龄" << endl;
		int age = 0;
		cin >> age;
		abs->arr[abs->Size].Age = age;
		cout << "请输入电话号码" << endl;
		string phone;
		cin >> phone;
		abs->arr[abs->Size].Phone = phone;
		cout << "请输入家庭住址" << endl;
		string addr;
		cin >> addr;
		abs->arr[abs->Size].Addr = addr;
		abs->Size++;
		cout << "联系人添加成功" << endl;
		system("cls");

	}
}
void Showperson(Addressbooks* abs) {
	if (abs->Size == 0) {
		cout << "通讯录中没有联系人" << endl;
	}
	else
		for (int i = 0;i < abs->Size;i++) {
			cout << "姓名" << abs->arr[i].Name << "\t";
			cout << "性别" << (abs->arr[i].Sex == 1 ? "男" : "女") << "\t";
			cout << "年龄" << abs->arr[i].Age << "\t";
			cout << "电话" << abs->arr[i].Phone << "\t";
			cout << "住址" << abs->arr[i].Addr << endl;
			system("cls");

		}

}
int isExit(Addressbooks* abs, string name) {
	for (int i = 0;i < abs->Size;i++) {
		if (abs->arr[i].Name == name) {
			return i;
		}
		else
			return -1;
	}
}
void Deleteperson(Addressbooks* abs) {
	cout << "请输入删除的人名" << endl;
	string name;
	cin >> name;
	int ret = isExit(abs, name);
	if (ret == -1)
		cout << "查无此人" << endl;
	else
		for (int i = ret;i < abs->Size;i++) {
			abs->arr[i] = abs->arr[i + 1];
			abs->Size--;
			cout << "删除成功" << endl;
			system("cls");
		}
}
void Findperson(Addressbooks* abs) {
	cout << "请输入查找的人名" << endl;
	string name;
	cin >> name;
	int ret = isExit(abs, name);
	if (ret == -1) {
		cout << "查无此人" << endl;

	}
	else
		cout << "姓名" << abs->arr[ret].Name << "\t";
	cout << "年龄" << abs->arr[ret].Age << "\t";
	cout << "性别" << (abs->arr[ret].Sex == 1 ? "男" : "女") << "\t";
	cout << "电话" << abs->arr[ret].Phone << "\t";
	cout << "住址" << abs->arr[ret].Addr << endl;
	system("cls");
}
void Modifyperson(Addressbooks* abs) {
	cout << "请输入要改的人名" << endl;
	string nAme;
	cin >> nAme;
	int ret = isExit(abs, nAme);
	if (ret == -1) {
		cout << "查无此人" << endl;
	}
	else
		cout << "请输入姓名" << endl;
	string name;
	cin >> name;
	abs->arr[ret].Name = name;
	cout << "请输入性别" << endl;
	int sex;
	cin >> sex;
	abs->arr[ret].Sex = sex;
	cout << "请输入年龄" << endl;
	int age;
	cin >> age;
	abs->arr[ret].Age = age;
	cout << "请输入电话号码" << endl;
	string phone;
	cin >> phone;
	abs->arr[ret].Phone = phone;
	cout << "请输入住址" << endl;
	string addr;
	cin >> addr;
	abs->arr[ret].Addr = addr;
	system("cls");
}
void cleanPerson(Addressbooks* abs) {
	abs->Size = 0;
	cout << "通讯录已空" << endl;
	system("cls");
}
int main() {

	Addressbooks abs;
	abs.Size = 0;

	int slect = 0;

	while (true) {
		Showmenu();
		cin >> slect;
		switch (slect) {

		case 1:
			Addperson(&abs);
			break;
		case 2:
			Showperson(&abs);
			break;
		case 3: /*{
			  cout << "请输入删除的姓名" << endl;
			  string name;
			  cin >> name;
			  if (isExit(&abs, name) == -1)
				  cout << "查无此人" << endl;
			  else
				  cout << "找到了" << endl;
				  break;
		}*/Deleteperson(&abs);
		case 4:
			Findperson(&abs);
			break;
		case 5:
			Modifyperson(&abs);
			break;
		case 6:
			cleanPerson(&abs);
			break;
		case 0:
			cout << "欢迎再次使用" << endl;
			break;
		default:
			break;
		}
	}
	return 0;
}
